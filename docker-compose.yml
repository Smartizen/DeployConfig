version: '3'

services:
  backend:
    build: ./backend
    container_name: backend
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
      - ./backend/node_modules:/usr/src/app/node_modules
    ports:
      - '4000:4000'
    depends_on:
      - postgres
      - sensor_backend
    networks:
      - app-network
    command: 'yarn start:dev'

  postgres:
    image: postgres:12-alpine
    container_name: 'postgres'
    restart: always
    environment:
      POSTGRES_DB: hydroponic
      POSTGRES_USER: root
      POSTGRES_PASSWORD: '123456'
    tty: true
    ports:
      - 5432:5432
    volumes:
      - ./db_data/postgres:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: 'adminer'
    restart: always
    ports:
      - 8082:8080
    networks:
      - app-network

  sensor_backend:
    build: ./sensor_backend
    container_name: sensor_backend
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./sensor_backend:/usr/src/app
      - ./sensor_backend/node_modules:/usr/src/app/node_modules
    ports:
      - '5001:5000'
    depends_on:
      - mongo
    networks:
      - app-network
      - sensor-network
    command: 'yarn start'

  mongo:
    image: mongo
    restart: always
    container_name: 'mongodb'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: '123456'
    volumes:
      - ./db_data/mongo/db:/data/db
      - ./db_data/mongo/configdb:/data/configdb
    networks:
      - sensor-network

  mongo-express:
    image: mongo-express
    container_name: 'mongo-express'
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: '123456'
    networks:
      - sensor-network

networks:
  app-network:
    driver: bridge
  sensor-network:
    driver: bridge
