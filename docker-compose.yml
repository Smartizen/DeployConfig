version: '3'

services:
  backend:
    hostname: backend
    container_name: backend
    build: ./backend
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
    expose:
      - 3000
    ports:
      - '3000:3000'
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      # - rabbitmq3
    networks:
      - app-network
    restart: always
    command: 'yarn start'

  # mongo:
  #   hostname: mongo1
  #   image: mongo
  #   restart: always
  #   container_name: mongo1
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: '123456'
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
  #   volumes:
  #     - ./data/mongo/db:/data/db
  #     - ./data/mongo/configdb:/data/configdb
  #   networks:
  #     - app-network

  # mongo-express:
  #   image: mongo-express
  #   container_name: 'mongo-express'
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   depends_on:
  #     - mongo
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: '123456'
  #   networks:
  #     - app-network

  # frontend:
  #   hostname: frontend
  #   image: 'node:10-alpine'
  #   container_name: frontend
  #   restart: always
  #   working_dir: /app
  #   volumes:
  #     - ./frontend:/app
  #   depends_on:
  #     - backend
  #   ports:
  #     - '8080:8080'
  #   networks:
  #     - app-network
  #   command: 'yarn serve'

  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo
    volumes:
      - ./data/data1/db:/data/db
      - ./data/data1/configdb:/data/configdb
    networks:
      - app-network
    expose:
      - 27017
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    ports:
      - 30001:27017
    restart: always
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'devrs']

  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo
    volumes:
      - ./data/data2/db:/data/db
      - ./data/data2/configdb:/data/configdb
    networks:
      - app-network
    expose:
      - 27017
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    ports:
      - 30002:27017
    restart: always
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'devrs']

  mongo3:
    hostname: mongo3
    container_name: mongo3
    image: mongo
    volumes:
      - ./data/data3/db:/data/db
      - ./data/data3/configdb:/data/configdb
    networks:
      - app-network
    expose:
      - 27017
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    ports:
      - 30003:27017
    restart: always
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'devrs']

  # rabbitmq3:
  #   image: rabbitmq:3-management
  #   hostname: rabbitmq
  #   container_name: rabbitmq
  #   environment:
  #     RABBITMQ_ERLANG_COOKIE: 'secret-cookie-here'
  #   volumes:
  #     - ./rabbitmq-data:/var/lib/rabbitmq
  #   restart: always
  #   ports:
  #     - 5672:5672
  #     - 8000:15672
  #     - 25676:25676
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
